<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept rev="2.0.0" id="set">

  <title>SET Statement</title>
  <titlealts><navtitle>SET</navtitle></titlealts>
  <prolog>
    <metadata>
      <data name="Category" value="Impala"/>
      <data name="Category" value="SQL"/>
      <data name="Category" value="Querying"/>
      <data name="Category" value="Configuring"/>
    </metadata>
  </prolog>

  <conbody>

    <p>
      <indexterm audience="Cloudera">SET statement</indexterm>
      Specifies values for query options that control the runtime behavior of other statements within the same
      session.
    </p>

    <p conref="../shared/impala_common.xml#common/syntax_blurb"/>

<codeblock>SET [<varname>query_option</varname>=<varname>option_value</varname>]
</codeblock>

    <p>
      <codeph>SET</codeph> with no arguments returns a result set consisting of all available query options and
      their current values.
    </p>

    <p>
      The query option name and any string argument values are case-insensitive.
    </p>

    <p>
      Each query option has a specific allowed notation for its arguments. Boolean options can be enabled and
      disabled by assigning values of either <codeph>true</codeph> and <codeph>false</codeph>, or
      <codeph>1</codeph> and <codeph>0</codeph>. Some numeric options accept a final character signifying the unit,
      such as <codeph>2g</codeph> for 2 gigabytes or <codeph>100m</codeph> for 100 megabytes. See
      <xref href="impala_query_options.xml#query_options"/> for the details of each query option.
    </p>

    <p conref="../shared/impala_common.xml#common/usage_notes_blurb"/>

    <p>
      <codeph>MEM_LIMIT</codeph> is probably the most commonly used query option. You can specify a high value to
      allow a resource-intensive query to complete. For testing how queries would work on memory-constrained
      systems, you might specify an artificially low value.
    </p>

    <p conref="../shared/impala_common.xml#common/complex_types_blurb"/>

    <p conref="../shared/impala_common.xml#common/example_blurb"/>

    <p>
      The following example sets some numeric and some Boolean query options to control usage of memory, disk
      space, and timeout periods, then runs a query whose success could depend on the options in effect:
    </p>

<codeblock>set mem_limit=64g;
set DISABLE_UNSAFE_SPILLS=true;
set parquet_file_size=400m;
set RESERVATION_REQUEST_TIMEOUT=900000;
insert overwrite parquet_table select c1, c2, count(c3) from text_table group by c1, c2, c3;
</codeblock>

    <p conref="../shared/impala_common.xml#common/added_in_20"/>

    <p>
      <codeph>SET</codeph> has always been available as an <cmdname>impala-shell</cmdname> command. Promoting it to
      a SQL statement lets you use this feature in client applications through the JDBC and ODBC APIs.
    </p>

<!-- <p conref="/Content/impala_common_xi44078.xml#common/jdbc_blurb"/> -->

    <p conref="../shared/impala_common.xml#common/cancel_blurb_no"/>

    <p conref="../shared/impala_common.xml#common/permissions_blurb_no"/>

    <p conref="../shared/impala_common.xml#common/related_info"/>

    <p>
      See <xref href="impala_query_options.xml#query_options"/> for the query options you can adjust using this
      statement.
    </p>
  </conbody>
</concept>
